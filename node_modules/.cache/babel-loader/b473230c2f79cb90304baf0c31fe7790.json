{"ast":null,"code":"import _objectSpread from\"/home/ashnove/Documents/PROJECT MATERIALS/PathFinding Demo/route-finder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/ashnove/Documents/PROJECT MATERIALS/PathFinding Demo/route-finder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ashnove/Documents/PROJECT MATERIALS/PathFinding Demo/route-finder/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ashnove/Documents/PROJECT MATERIALS/PathFinding Demo/route-finder/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ashnove/Documents/PROJECT MATERIALS/PathFinding Demo/route-finder/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./simulator.css\";import Cell from\"./Cell/Cell\";import{Button,Navbar}from\"react-bootstrap\";import{dijkstra,getShortestPath}from\"./Algorithms/dikjstra\";import{depthFirstSearch,getPath}from\"./Algorithms/dfs\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var row_start=12;var col_start=1;var row_end=12;var col_end=52;var RouteFinder=/*#__PURE__*/function(_Component){_inherits(RouteFinder,_Component);var _super=_createSuper(RouteFinder);function RouteFinder(){var _this;_classCallCheck(this,RouteFinder);_this=_super.call(this);_this.state={grid:[],mouseIsPressed:false};return _this;}_createClass(RouteFinder,[{key:\"componentDidMount\",value:function componentDidMount(){var grid=makeGrid();this.setState({grid:grid});}},{key:\"handleMouseDown\",value:function handleMouseDown(row,col){var newGrid=toggleWall(this.state.grid,row,col);this.setState({grid:newGrid,mouseIsPressed:true});}},{key:\"handleMouseEnter\",value:function handleMouseEnter(row,col){if(!this.state.mouseIsPressed)return;var newGrid=toggleWall(this.state.grid,row,col);this.setState({grid:newGrid});}},{key:\"handleMouseUp\",value:function handleMouseUp(){this.setState({mouseIsPressed:false});}},{key:\"runSimulation\",value:function runSimulation(allPath,reqPath){var _this2=this;var _loop=function _loop(i){if(i===allPath.length){setTimeout(function(){_this2.runFinalRoute(reqPath);},10*i);return{v:void 0};}var node=allPath[i];if(row_start===node.row&&col_start===node.col)return\"continue\";var nodeState=\"cell visited-cell\";if(node.isEnd)nodeState=\"cell end-cell visited-cell\";console.log(\"animating\");setTimeout(function(){document.getElementById(\"cell-\".concat(node.row,\"-\").concat(node.col)).className=nodeState;},10*i);};for(var i=0;i<=allPath.length;i++){var _ret=_loop(i);if(_ret===\"continue\")continue;if(typeof _ret===\"object\")return _ret.v;}}},{key:\"runFinalRoute\",value:function runFinalRoute(reqPath){var _loop2=function _loop2(i){var node=reqPath[i];if(row_start===node.row&&col_start===node.col)return\"continue\";setTimeout(function(){var nodeState=\"cell final-cell\";if(node.isEnd)nodeState=\"cell end-cell final-cell\";document.getElementById(\"cell-\".concat(node.row,\"-\").concat(node.col)).className=nodeState;},50*i);};for(var i=0;i<reqPath.length;i++){var _ret2=_loop2(i);if(_ret2===\"continue\")continue;}}},{key:\"performDijkstra\",value:function performDijkstra(){var grid=this.state.grid;var start=grid[row_start][col_start];var end=grid[row_end][col_end];var allPath=dijkstra(grid,start,end);var reqPath=getShortestPath(end);this.runSimulation(allPath,reqPath);}},{key:\"performDFS\",value:function performDFS(){var grid=this.state.grid;var start=grid[row_start][col_start];var end=grid[row_end][col_end];var allPath=depthFirstSearch(start,end,grid);var reqPath=getPath(end);this.runSimulation(allPath,reqPath);}},{key:\"clearBoard\",value:function clearBoard(){var grid=this.state.grid;var newGrid=grid.slice();for(var row=0;row<24;row++){for(var col=0;col<54;col++){var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{isWall:false,isStart:row_start===row&&col_start===col?true:false,isEnd:row_end===row&&col_end===col?true:false});newGrid[row][col]=newNode;}}this.setState({grid:newGrid});}},{key:\"fullWall\",value:function fullWall(){for(var row=0;row<24;row++){for(var col=0;col<54;col++){if(row_start===row&&col_start===col)continue;if(row_end===row&&col_end===col)continue;var newGrid=toggleWall(this.state.grid,row,col,true);this.setState({grid:newGrid});}}}},{key:\"refreshPage\",value:function refreshPage(){window.location.reload(false);}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,grid=_this$state.grid,mouseIsPressed=_this$state.mouseIsPressed;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Navbar,{bg:\"dark\",variant:\"dark\",children:[/*#__PURE__*/_jsx(Navbar.Brand,{href:\"root\",children:\"Route Finder\"}),/*#__PURE__*/_jsx(Button,{className:\"topRow\",variant:\"light\",onClick:function onClick(){return _this3.performDijkstra();},children:\"Dijkstra's Algorithm\"}),\" \",/*#__PURE__*/_jsx(Button,{className:\"topRow\",variant:\"light\",onClick:function onClick(){return _this3.performDFS();},children:\"Depth First Search\"}),\" \",/*#__PURE__*/_jsx(Button,{className:\"topRow\",variant:\"secondary\",onClick:function onClick(){return _this3.clearBoard();},children:\"Draw Maze\"}),\" \",/*#__PURE__*/_jsx(Button,{className:\"topRow\",variant:\"secondary\",onClick:function onClick(){return _this3.fullWall();},children:\"Draw Path\"}),/*#__PURE__*/_jsx(Button,{className:\"sidebar\",onClick:this.refreshPage,variant:\"warning\",children:\"Reset\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:grid.map(function(row,rowIdx){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:row.map(function(cell,cellID){var row=cell.row,col=cell.col,isEnd=cell.isEnd,isStart=cell.isStart,isWall=cell.isWall;return/*#__PURE__*/_jsx(Cell,{row:row,col:col,isWall:isWall,isStart:isStart,isEnd:isEnd,mouseIsPressed:mouseIsPressed,onMouseDown:function onMouseDown(row,col){return _this3.handleMouseDown(row,col);},onMouseEnter:function onMouseEnter(row,col){return _this3.handleMouseEnter(row,col);},onMouseUp:function onMouseUp(){return _this3.handleMouseUp();}},cellID);})},rowIdx);})})]});}}]);return RouteFinder;}(Component);export{RouteFinder as default};var makeGrid=function makeGrid(){var grid=[];for(var row=0;row<24;row++){var currentRow=[];for(var col=0;col<54;col++){currentRow.push(createCell(col,row));}grid.push(currentRow);}return grid;};var createCell=function createCell(col,row){return{col:col,row:row,isStart:row===row_start&&col===col_start,isEnd:row===row_end&&col===col_end,distance:Infinity,isVisited:false,isWall:false,previousNode:null};};var toggleWall=function toggleWall(grid,row,col){var allWall=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var newGrid=grid.slice();var cell=newGrid[row][col];var cellUpdated=_objectSpread(_objectSpread({},cell),{},{isWall:allWall?true:!cell.isWall});newGrid[row][col]=cellUpdated;return newGrid;};","map":{"version":3,"sources":["/home/ashnove/Documents/PROJECT MATERIALS/PathFinding Demo/route-finder/src/simulator/simulator.jsx"],"names":["React","Component","Cell","Button","Navbar","dijkstra","getShortestPath","depthFirstSearch","getPath","row_start","col_start","row_end","col_end","RouteFinder","state","grid","mouseIsPressed","makeGrid","setState","row","col","newGrid","toggleWall","allPath","reqPath","i","length","setTimeout","runFinalRoute","node","nodeState","isEnd","console","log","document","getElementById","className","start","end","runSimulation","slice","newNode","isWall","isStart","window","location","reload","performDijkstra","performDFS","clearBoard","fullWall","refreshPage","map","rowIdx","cell","cellID","handleMouseDown","handleMouseEnter","handleMouseUp","currentRow","push","createCell","distance","Infinity","isVisited","previousNode","allWall","cellUpdated"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./simulator.css\";\nimport Cell from \"./Cell/Cell\";\nimport { Button, Navbar } from \"react-bootstrap\";\nimport { dijkstra, getShortestPath } from \"./Algorithms/dikjstra\";\nimport { depthFirstSearch, getPath } from \"./Algorithms/dfs\";\n\nconst row_start = 12;\nconst col_start = 1;\nconst row_end = 12;\nconst col_end = 52;\n\nexport default class RouteFinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            grid: [],\n            mouseIsPressed: false,\n    };\n}\n\ncomponentDidMount() {\n    let grid = makeGrid();\n    this.setState({ grid });\n}\n\nhandleMouseDown(row, col) {\n    const newGrid = toggleWall(this.state.grid, row, col);\n    this.setState({ grid: newGrid, mouseIsPressed: true });\n}\n\nhandleMouseEnter(row, col) {\n    if (!this.state.mouseIsPressed) return;\n    const newGrid = toggleWall(this.state.grid, row, col);\n    this.setState({ grid: newGrid });\n}\n\nhandleMouseUp() {\n    this.setState({ mouseIsPressed: false });\n}\n\nrunSimulation(allPath, reqPath) {\n    for (let i = 0; i <= allPath.length ; i++) {\n        \n        if (i === allPath.length) {\n            setTimeout(() => {\n                this.runFinalRoute(reqPath);\n            }, 10 * i);\n            return;\n        }\n\n        const node = allPath[i];\n        if(row_start===node.row && col_start===node.col) continue;\n        let nodeState = `cell visited-cell`;\n        if(node.isEnd)\n            nodeState = `cell end-cell visited-cell`\n        \n        console.log(`animating`);\n        setTimeout(() => {\n            document.getElementById(`cell-${node.row}-${node.col}`).className = nodeState;\n        }, 10 * i);\n    }\n}\n\nrunFinalRoute(reqPath) {\n    for (let i = 0; i < reqPath.length ; i++) {\n        const node = reqPath[i];\n        if(row_start===node.row && col_start===node.col) continue;\n        setTimeout(() => {\n            let nodeState = `cell final-cell`;\n            if(node.isEnd)\n                nodeState = `cell end-cell final-cell`\n            document.getElementById(`cell-${node.row}-${node.col}`).className = nodeState;\n        }, 50 * i);\n    }\n}\n\nperformDijkstra() {\n    const { grid } = this.state;\n    const start = grid[row_start][col_start];\n    const end = grid[row_end][col_end];\n    const allPath = dijkstra(grid, start, end);\n    const reqPath = getShortestPath(end);\n    this.runSimulation(allPath, reqPath)\n}\n\nperformDFS(){\n    const { grid } = this.state;\n    const start = grid[row_start][col_start];\n    const end = grid[row_end][col_end];\n    const allPath = depthFirstSearch(start, end, grid);\n    const reqPath = getPath(end);\n    this.runSimulation(allPath, reqPath);\n}\n\nclearBoard() {\n    const { grid } = this.state;\n    const newGrid = grid.slice();\n    for (let row = 0; row < 24; row++) {\n      for (let col = 0; col < 54; col++) {\n        const node = newGrid[row][col];\n        const newNode = {\n          ...node,\n          isWall: false,\n          isStart: row_start===row && col_start===col ? true : false,\n          isEnd: row_end===row && col_end===col ? true : false\n        };\n        newGrid[row][col] = newNode;\n      }\n    }\n    this.setState({ grid: newGrid });\n}\n\nfullWall() {\n    for (let row = 0; row < 24; row++) {\n      for (let col = 0; col < 54; col++) {\n        if(row_start===row && col_start===col) continue;\n        if(row_end===row && col_end===col) continue;\n        const newGrid = toggleWall(this.state.grid, row, col, true);\n        this.setState({ grid: newGrid });\n      }\n    }\n}\nrefreshPage(){\n    window.location.reload(false);\n}\nrender() {\n    const { grid, mouseIsPressed } = this.state;\n\n    return (\n      <>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"root\">Route Finder</Navbar.Brand>\n          <Button className=\"topRow\" variant=\"light\" onClick={() => this.performDijkstra()}>\n            Dijkstra's Algorithm\n          </Button>{\" \"}\n          <Button className=\"topRow\" variant=\"light\" onClick={() => this.performDFS()}>\n            Depth First Search\n          </Button>{\" \"}\n          <Button className=\"topRow\" variant=\"secondary\" onClick={() => this.clearBoard()}>\n            Draw Maze\n          </Button>{\" \"}\n          <Button className=\"topRow\" variant=\"secondary\" onClick={() => this.fullWall()} >\n            Draw Path\n          </Button>\n          <Button className=\"sidebar\" onClick={this.refreshPage} variant=\"warning\">\n            Reset\n          </Button>\n        </Navbar>\n\n        <div className=\"col\">\n            {\n                grid.map((row, rowIdx) => {\n                return (\n                    <div className = \"row\" key={rowIdx}>\n                    {\n                        row.map((cell, cellID) => {\n                        const { row, col, isEnd, isStart, isWall } = cell;\n                        \n                        return (\n                            <Cell\n                            row={row} key={cellID} col={col} isWall={isWall} isStart={isStart} isEnd={isEnd} mouseIsPressed={mouseIsPressed}\n                            onMouseDown={(row, col) => this.handleMouseDown(row, col)}\n                            onMouseEnter={(row, col) => this.handleMouseEnter(row, col)}\n                            onMouseUp={() => this.handleMouseUp()}\n                            ></Cell>                            \n                        );                    \n                    })}\n                </div>\n                );\n            })}\n        </div>\n      </>\n    );\n  }\n}\n\nlet makeGrid = () => {\n    let grid = [];\n    for (let row = 0; row < 24; row++) {\n        let currentRow = [];\n        for (let col = 0; col < 54; col++) {\n            currentRow.push(createCell(col, row));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n};\n\nconst createCell = (col, row) => {\n    return {\n        col,\n        row,\n        isStart: row === row_start && col === col_start,\n        isEnd: row === row_end && col === col_end,\n        distance: Infinity,\n        isVisited: false,\n        isWall: false,\n        previousNode: null,\n    };\n};\n\nlet toggleWall = (grid, row, col, allWall = false) => {\n    const newGrid = grid.slice();\n    const cell = newGrid[row][col];\n    const cellUpdated = {\n        ...cell,\n        isWall: allWall ? true : !cell.isWall\n    };\n    newGrid[row][col] = cellUpdated;\n    return newGrid;\n};\n\n"]},"metadata":{},"sourceType":"module"}